name: Deploy to AKS

on:
  workflow_run:
    workflows:
      - "Build and Push Docker Images"
    types:
      - completed

jobs:
  deploy-to-aks:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Install kube-linter for best practice linting
      - name: Install kube-linter
        run: |
          curl -sSL https://github.com/stackrox/kube-linter/releases/latest/download/kube-linter-linux.tar.gz \
          | tar xz && sudo mv kube-linter /usr/local/bin/

      # Step 3: Run kube-linter on Kubernetes configs
      - name: Run kube-linter
        run: |
          kube-linter lint Cluster/k8s || exit 1

      # Step 4: Log in to Azure via Service Principal (store its JSON blob in ${{ secrets.AZURE_CREDENTIALS }})
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 5: Configure kubectl to talk to your AKS cluster
      - name: Set AKS context
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      # Step 6: Apply every YAML under /k8s/ to AKS
      - name: Deploy manifests to AKS
        run: |
          kubectl apply -f Cluster/k8s -f Cluster/k8s/service-deployments -f Cluster/k8s/hpa
