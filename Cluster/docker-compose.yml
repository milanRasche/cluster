services:
  gateway.api:
    build:
      context: .
      dockerfile: gateway/Gateway.API/Dockerfile
    image: milanfontys/cluster_gateway_service:${TAG:-latest}
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - auth.api
      - auth-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    volumes:
      - ./certs:/app/certs:ro
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      ASPNETCORE_URLS: http://+:8080;https://+:8081
      ASPNETCORE_HTTPS_PORT: 8081
      ASPNETCORE_Kestrel__Certificates__Default__Path: /app/certs/devcert.pfx
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ReverseProxy__Clusters__auth_cluster__Destinations__auth_api__Address: 
        http://auth.api:8080/
    networks:
      - cluster_network

  auth.api:
    build:
      context: .
      dockerfile: services/Auth.API/Dockerfile
    image: milanfontys/cluster_auth_service:${TAG:-latest}
    expose:
      - "8080"
    depends_on:
      - auth-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: >
        Server=auth-db,1433;
        Database=auth_db;
        User=sa;
        Password=TestPassword123;
        TrustServerCertificate=True
      Jwt__Key: SuperSecretKeyForJWT123456789abcd123abc123abc123abc123
      Jwt__Issuer: localhost
      Jwt__Audience: localhost
    networks:
      - cluster_network

  auth-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    healthcheck:
      test: 
        ["CMD-SHELL", 
        "/opt/mssql-tools/bin/sqlcmd -U sa -P \"$SA_PASSWORD\" -Q \"SELECT 1\""]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: 1G
        reservations:
          cpus: "0.50"
          memory: 512M
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: 'TestPassword123'
    networks:
      cluster_network:
        aliases:
        - auth-db

  clusterfrontend:
    build:
      context: .
      dockerfile: frontend/ClusterFrontend/ClusterFrontend/Dockerfile
    image: milanfontys/cluster_frontend:${TAG:-latest}
    ports:
      - "5002:5002"
      - "5003:5003"
    depends_on:
      - gateway.api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    volumes:
      - ./certs:/app/certs:ro
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5002;https://+:5003
      ASPNETCORE_HTTPS_PORT: 5003
      ASPNETCORE_Kestrel__Certificates__Default__Path: /app/certs/devcert.pfx
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
        - APISETTINGS__AUTHAPIBASEURL=http://gateway.api:8080/
    networks:
      - cluster_network

networks:
  cluster_network:
    driver: bridge
