@page "/login"
@using ClusterFrontend.Services
@using ClusterFrontend.Interface
@using ClusterFrontend.DTOs
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<EditForm Model="@loginModel" OnValidSubmit="@HandleLogin" FormName="Login">
    <div>
        <h3 style="font-weight:bold; color:purple">Cluster Login</h3>
    </div>
    <br />
    <div class="col-12 row">
        <input class="form-control col-12" @bind="loginModel.UserEmail" placeholder="Email address" />
    </div>
    <br />
    <div class="col-12 row">
        <input type="password" class="form-control col-12" @bind="loginModel.Password" placeholder="Password" />
    </div>
    <br />
    <div class="col-12 row">
        <input type="submit" class="form-control col-6 btn btn-primary" value="Login" />
        <a href="/register" class="col-6">Don't have an account? Register here</a>
    </div>
    <br />
    @if (ErrorMessage != null)
    {
        <div class="col-12 row" style="text-align:left; font-weight:bold">
            <span class="col-12">@ErrorMessage</span>
        </div>
    }
</EditForm>
@code {
    private UserLoginRequest loginModel = new();
    private string? ErrorMessage { get; set; }

    private async Task HandleLogin()
    {
        try
        {
            var tokens = await AuthService.Login(loginModel);
            if (tokens != null)
            {
                // Cookie setting is now handled inside AuthService via JS Interop
                NavigationManager.NavigateTo("/");
            }
            else
            {
                ErrorMessage = "Invalid email or password";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
        }
    }
}