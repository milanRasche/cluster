@page "/register"
@using ClusterFrontend.Services
@using ClusterFrontend.Interface
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@rendermode InteractiveServer

<EditForm Model="@registerModel" OnValidSubmit="@HandleRegistration" FormName="Register">
    <div>
        <h3 style="font-weight:bold; color:purple">Cluster Register</h3>
    </div>
    <br />
    <div class="col-12 row">
        <input class="form-control col-12" @bind="registerModel.Username" placeholder="Username" />
    </div>
    <br />
    <div class="col-12 row">
        <input class="form-control col-12" @bind="registerModel.UserEmail" placeholder="Email address" />
    </div>
    <br />
    <div class="col-12 row">
        <input type="password" class="form-control col-12" @bind="registerModel.Password" placeholder="Password" />
    </div>
    <br />
    <div class="col-12 row">
        <input type="submit" class="form-control col-6 btn btn-primary" value="Register" />
        <a href="/login" class="col-6">Already registered?</a>
    </div>
    <br />
    <div class="col-12 row" style="text-align:left; font-weight:bold">
        <span class="col-12">@ErrorMessage</span>
    </div>
</EditForm>

@code {
    private UserRegisterRequest registerModel;
    private string ErrorMessage { get; set; }

    protected override void OnInitialized()
    {
        registerModel = new UserRegisterRequest();
    }

    private async Task HandleRegistration()
    {
        try
        {
            var success = await AuthService.Register(registerModel);
            if (success)
            {
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                ErrorMessage = "Invalid registration details. Please try again.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
